###############  Dave Wagner Assignment 2 #################


###########Results of test data################

> 
> 
> 
> ############ Models largely based on examples given by the assignemnt
> ##### .... [TRUNCATED] 

> ## This function computes the inverse of the  "matrix" generated by the
> ## makeCacheMatrix above. If the inverse has been already calculated (and  .... [TRUNCATED] 
> Testmat <- makeCacheMatrix(matrix(1:4,2,2))
> Testmat$get()
     [,1] [,2]
[1,]    1    3
[2,]    2    4
> Testmat$getinverse()
NULL
> cacheSolve(Testmat)
     [,1] [,2]
[1,]   -2  1.5
[2,]    1 -0.5
> cacheSolve(Testmat)
retrieve cached data
     [,1] [,2]
[1,]   -2  1.5
[2,]    1 -0.5
> Testmat$getinverse()
     [,1] [,2]
[1,]   -2  1.5
[2,]    1 -0.5
> Testmat$set(matrix(c(3, 3, 1, 4))
+ 
+ 
+ 

> Testmat$set(matrix(c(3, 3, 1, 4), 2, 2))
> Testmat$get()
     [,1] [,2]
[1,]    3    1
[2,]    3    4
> Testmat$getinverse()
NULL
> cacheSolve(Testmat)
           [,1]       [,2]
[1,]  0.4444444 -0.1111111
[2,] -0.3333333  0.3333333
> cacheSolve(Testmat)
retrieve cached data
           [,1]       [,2]
[1,]  0.4444444 -0.1111111
[2,] -0.3333333  0.3333333
> Testmat$getinverse()
           [,1]       [,2]
[1,]  0.4444444 -0.1111111
[2,] -0.3333333  0.3333333
> 